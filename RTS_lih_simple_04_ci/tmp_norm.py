"""
Такая нормализация сохраняет относительное соотношение данных и их знаки, что полезно, например, 
для ситуаций, когда важны как величина, так и направление 
(например, в финансовом анализе или обработке сигналов). 
Если у вас есть ещё вопросы по теме, пишите!
"""

import numpy as np

# Исходные данные
data = np.array([-10, -5, 0, 3, 5])

# Мин-макс нормализация с сохранением знака
min_val = np.min(np.abs(data))
max_val = np.max(np.abs(data))

normalized_data = (np.abs(data) - min_val) / (max_val - min_val) * np.sign(data)

print(normalized_data)